default:
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind

stages:
  - test
  - build

test_notificador:
  stage: test
  image: python:3.8-alpine
  before_script:
    - apk add --no-cache git
    - git submodule update --init --recursive
  script:
    - cd notificador
    - pip install -r requirements.txt
    - pip install coverage
    - python -m coverage run -m unittest discover
    - python -m coverage report -m
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'

test_pagos:
  stage: test
  image: golang:1.18
  before_script:
    - apt-get update && apt-get install -y git
    - git submodule update --init --recursive 
  script:
    - cd pagos
    - go env -w GO111MODULE=off
    - go get -d
    - go get "github.com/stretchr/testify/assert"
    - go test ./... -v -coverprofile=coverage.out
    - go tool cover -func=coverage.out

build_notificador:
  stage: build
  before_script:
    - echo $CI_JOB_TOKEN | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - apk add --no-cache git
    - git submodule update --init --recursive
  script:
    - docker buildx create --name notifier --driver=docker-container
    - docker buildx build --tag $CI_REGISTRY_IMAGE:notificador --platform linux/arm64,linux/amd64 --builder notifier --push ./notificador

build_pagos:
  stage: build
  before_script:
    - echo $CI_JOB_TOKEN | docker login $CI_REGISTRY -u $CI_REGISTRY_USER --password-stdin
    - apk add --no-cache git
    - git submodule update --init --recursive
  script:
    - docker buildx create --name payments --driver=docker-container
    - docker buildx build --tag $CI_REGISTRY_IMAGE:pagos --platform linux/arm64,linux/amd64 --builder payments --push ./pagos